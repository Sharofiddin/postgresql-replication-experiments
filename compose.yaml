services:
  api:
    image: sharofiddin/task-scheduler:1.0.0-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
       QUARKUS_DATASOURCE_DB-KIND: "postgresql"
       QUARKUS_DATASOURCE_REACTIVE_URL: "postgresql://primary:5432/tasks"
       QUARKUS_DATASOURCE_USERNAME: "user"
       QUARKUS_DATASOURCE_PASSWORD: "password"
       QUARKUS_DATASOURCE_REPLICA-SYNC_DB-KIND: "postgresql"
       QUARKUS_DATASOURCE_REPLICA-SYNC_REACTIVE_URL: "postgresql://replica-sync:5432/tasks"
       QUARKUS_DATASOURCE_REPLICA-SYNC_USERNAMe: "user"
       QUARKUS_DATASOURCE_REPLICA-SYNC_PASSWORD: "password"
       QUARKUS_DATASOURCE_REPLICA-ASYNC_DB-KIND: "postgresql"
       QUARKUS_DATASOURCE_REPLICA-ASYNC_REACTIVE_URL: "postgresql://replica-async:5432/tasks"
       QUARKUS_DATASOURCE_REPLICA-ASYNC_USERNAME: "user"
       QUARKUS_DATASOURCE_REPLICA-ASYNC_PASSWORD: "password"

##================================================
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./metrics-config/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

##==========================

  grafana:
       image: grafana/grafana:latest
       ports:
         - "3000:3000"
       environment:
         - GF_SECURITY_ADMIN_PASSWORD=admin
       volumes:
         - grafana-data:/var/lib/grafana

##==========================
  primary:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-config/primary/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres-config/primary/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init-primary.sql:/docker-entrypoint-initdb.d/init.sql
      - primary-data:/var/lib/postgresql/data
    command: 'postgres -c config_file="/etc/postgresql/postgresql.conf"'
  # Add PostgreSQL exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_NAME=postgresql://user:password@primary:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
        #volumes:
        #      - ./metrics-config/queries.yml:/queries.yml
        #command: --extend.query-path=/queries.yml
    depends_on:
      - primary
  
  replica-sync:
    image: postgres-slave:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks
      SLOT_NAME: 'sync_slot'
      PGAPPNAME: 'replica-sync'
    ports:
      - "5434:5432"
    volumes:
      - ./postgres-config/replica-sync/postgresql.conf:/etc/postgresql/postgresql.conf
      - replica-sync-data:/var/lib/postgresql/data
    command: './slave-init.sh'
    depends_on:
      - primary
  ## NOT INITIAL. this node to experiment adding new sync replica 
  replica-sync-2:
    image: postgres-slave:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks
      SLOT_NAME: 'sync_slot_2'
      PGAPPNAME: 'replica-sync'
    ports:
      - "5437:5432"
    volumes:
      - ./postgres-config/replica-sync/postgresql.conf:/etc/postgresql/postgresql.conf
      - replica-sync-2-data:/var/lib/postgresql/data
    command: './slave-init.sh'
    depends_on:
      - primary
  replica-async:
    image: postgres-slave:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks
      SLOT_NAME: 'async_slot'
      PGAPPNAME: 'replica-async'
    ports:
      - "5435:5432"
    volumes:
      - ./postgres-config/replica-async/postgresql.conf:/etc/postgresql/postgresql.conf
      - replica-async-data:/var/lib/postgresql/data
    command: './slave-init.sh' 
    depends_on:
      - primary
  
  ## NOT INITIAL. this node to experiment adding new async replica 
  replica-async-2:
    image: postgres-slave:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tasks
      SLOT_NAME: 'async_slot_2'
      PGAPPNAME: 'replica-async-2'
    ports:
      - "5436:5432"
    volumes:
      - ./postgres-config/replica-async/postgresql.conf:/etc/postgresql/postgresql.conf
      - replica-async-2-data:/var/lib/postgresql/data
    command: './slave-init.sh' 
    depends_on:
      - primary
volumes:
  primary-data:
  replica-sync-data:
  replica-sync-2-data:
  replica-async-data:
  replica-async-2-data:
  grafana-data:
